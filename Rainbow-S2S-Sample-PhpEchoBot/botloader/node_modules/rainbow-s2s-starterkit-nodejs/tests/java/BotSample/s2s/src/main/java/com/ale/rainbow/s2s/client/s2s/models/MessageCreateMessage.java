/*
 * S2S api
 * # Rainbow S2S API guide  ## Preamble  ### Introduction  This guide describes a list of API services that are provided by the OT Rainbow S2S portal. This portal is dedicated to S2S features, providing a full REST API for Rainbow features.  ### Protocol  REST interface is used for sending/receiving OT rainbow API messages. HTTP verbs GET, DELETE, POST, PUT, etc. are used. Standard HTTP responses are used to provide requested information or error status. There is no session notion in OT Rainbow system, so requests could be issued according to the stateless model, without transport conservation between them. Additional data could be provided in message body. JSON is used as a main format for data encoding in message body part. Each request is started with the following pattern /{module}/{version}/ where {module} is a portal module name to address and {version} is a version of used API, e.g. “v1.0”.  ### Security considerations  Each request should contain some credential information to authenticate itself. Standard HTTP authentication with basic/bearer modes is used. JSON Web Token mechanism is used to provide authentication information. JWT has a expire timeout that is controlled by OT Rainbow portal to prevent very long token usage. Also authentication with application token is used. The token must be provided in the request HTTP header, using a custom header: APIKey. At server side, token is verified, and if it doesn’t match, 403 Not Allowed response is sent. TLS is used as a transport protocol to support message exchanges between OT Rainbow portal and an application.  
 *
 * The version of the OpenAPI document: 1.104.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ale.rainbow.s2s.client.s2s.models;

import java.util.Objects;
import java.util.Arrays;
import com.ale.rainbow.s2s.client.s2s.models.Attachment;
import com.ale.rainbow.s2s.client.s2s.models.Content;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;

/**
 * Message object
 */
@ApiModel(description = "Message object")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-02-13T18:40:45.585335+01:00[Europe/Paris]")
public class MessageCreateMessage implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_SUBJECT = "subject";
  @SerializedName(SERIALIZED_NAME_SUBJECT)
  private String subject;

  public static final String SERIALIZED_NAME_LANG = "lang";
  @SerializedName(SERIALIZED_NAME_LANG)
  private String lang;

  public static final String SERIALIZED_NAME_CONTENTS = "contents";
  @SerializedName(SERIALIZED_NAME_CONTENTS)
  private List<Content> contents = null;

  public static final String SERIALIZED_NAME_BODY = "body";
  @SerializedName(SERIALIZED_NAME_BODY)
  private String body;

  public static final String SERIALIZED_NAME_ATTACHMENT = "attachment";
  @SerializedName(SERIALIZED_NAME_ATTACHMENT)
  private Attachment attachment;


  public MessageCreateMessage subject(String subject) {
    
    this.subject = subject;
    return this;
  }

   /**
   * Message subject
   * @return subject
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Message subject")

  public String getSubject() {
    return subject;
  }


  public void setSubject(String subject) {
    this.subject = subject;
  }


  public MessageCreateMessage lang(String lang) {
    
    this.lang = lang;
    return this;
  }

   /**
   * en
   * @return lang
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "en")

  public String getLang() {
    return lang;
  }


  public void setLang(String lang) {
    this.lang = lang;
  }


  public MessageCreateMessage contents(List<Content> contents) {
    
    this.contents = contents;
    return this;
  }

  public MessageCreateMessage addContentsItem(Content contentsItem) {
    if (this.contents == null) {
      this.contents = new ArrayList<Content>();
    }
    this.contents.add(contentsItem);
    return this;
  }

   /**
   * list of alternative content
   * @return contents
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "list of alternative content")

  public List<Content> getContents() {
    return contents;
  }


  public void setContents(List<Content> contents) {
    this.contents = contents;
  }


  public MessageCreateMessage body(String body) {
    
    this.body = body;
    return this;
  }

   /**
   * Message body
   * @return body
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Message body")

  public String getBody() {
    return body;
  }


  public void setBody(String body) {
    this.body = body;
  }


  public MessageCreateMessage attachment(Attachment attachment) {
    
    this.attachment = attachment;
    return this;
  }

   /**
   * Get attachment
   * @return attachment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Attachment getAttachment() {
    return attachment;
  }


  public void setAttachment(Attachment attachment) {
    this.attachment = attachment;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MessageCreateMessage messageCreateMessage = (MessageCreateMessage) o;
    return Objects.equals(this.subject, messageCreateMessage.subject) &&
        Objects.equals(this.lang, messageCreateMessage.lang) &&
        Objects.equals(this.contents, messageCreateMessage.contents) &&
        Objects.equals(this.body, messageCreateMessage.body) &&
        Objects.equals(this.attachment, messageCreateMessage.attachment);
  }

  @Override
  public int hashCode() {
    return Objects.hash(subject, lang, contents, body, attachment);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MessageCreateMessage {\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    lang: ").append(toIndentedString(lang)).append("\n");
    sb.append("    contents: ").append(toIndentedString(contents)).append("\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("    attachment: ").append(toIndentedString(attachment)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

