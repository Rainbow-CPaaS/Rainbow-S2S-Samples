{"version":3,"file":"index-es.min.js","sources":["../src/jsonpath.js"],"sourcesContent":["/* eslint-disable no-eval */\r\n\r\nconst globalEval = eval;\r\nconst supportsNodeVM = typeof module !== 'undefined' && !!module.exports &&\r\n    !(typeof navigator !== 'undefined' && navigator.product === 'ReactNative');\r\nconst allowedResultTypes = ['value', 'path', 'pointer', 'parent', 'parentProperty', 'all'];\r\nconst {hasOwnProperty} = Object.prototype;\r\n\r\n/**\r\n * Copy items out of one array into another\r\n * @param {Array} source Array with items to copy\r\n * @param {Array} target Array to which to copy\r\n * @param {function} conditionCb Callback passed the current item; will move\r\n *     item if evaluates to `true`\r\n * @returns {undefined}\r\n */\r\nconst moveToAnotherArray = function (source, target, conditionCb) {\r\n    const il = source.length;\r\n    for (let i = 0; i < il; i++) {\r\n        const item = source[i];\r\n        if (conditionCb(item)) {\r\n            target.push(source.splice(i--, 1)[0]);\r\n        }\r\n    }\r\n};\r\n\r\nconst vm = supportsNodeVM\r\n    ? require('vm') : {\r\n        /**\r\n         * @param {string} expr Expression to evaluate\r\n         * @param {object} context Object whose items will be added to evaluation\r\n         * @returns {*} Result of evaluated code\r\n         */\r\n        runInNewContext (expr, context) {\r\n            const keys = Object.keys(context);\r\n            const funcs = [];\r\n            moveToAnotherArray(keys, funcs, (key) => {\r\n                return typeof context[key] === 'function';\r\n            });\r\n            const code = funcs.reduce((s, func) => {\r\n                let fString = context[func].toString();\r\n                if (!(/function/).exec(fString)) {\r\n                    fString = 'function ' + fString;\r\n                }\r\n                return 'var ' + func + '=' + fString + ';' + s;\r\n            }, '') + keys.reduce((s, vr) => {\r\n                return 'var ' + vr + '=' + JSON.stringify(context[vr]).replace(\r\n                    // http://www.thespanner.co.uk/2011/07/25/the-json-specification-is-now-wrong/\r\n                    /\\u2028|\\u2029/g, (m) => {\r\n                        return '\\\\u202' + (m === '\\u2028' ? '8' : '9');\r\n                    }\r\n                ) + ';' + s;\r\n            }, expr);\r\n            return globalEval(code);\r\n        }\r\n    };\r\n\r\n/**\r\n * Copies array and then pushes item into it\r\n * @param {array} arr Array to copy and into which to push\r\n * @param {*} item Array item to add (to end)\r\n * @returns {array} Copy of the original array\r\n */\r\nfunction push (arr, item) {\r\n    arr = arr.slice();\r\n    arr.push(item);\r\n    return arr;\r\n}\r\n/**\r\n * Copies array and then unshifts item into it\r\n * @param {*} item Array item to add (to beginning)\r\n * @param {array} arr Array to copy and into which to unshift\r\n * @returns {array} Copy of the original array\r\n */\r\nfunction unshift (item, arr) {\r\n    arr = arr.slice();\r\n    arr.unshift(item);\r\n    return arr;\r\n}\r\n\r\n/**\r\n * Caught when JSONPath is used without `new` but rethrown if with `new`\r\n * @extends Error\r\n */\r\nclass NewError extends Error {\r\n    /**\r\n     * @param {*} value The evaluated scalar value\r\n     */\r\n    constructor (value) {\r\n        super('JSONPath should not be called with \"new\" (it prevents return of (unwrapped) scalar values)');\r\n        this.avoidNew = true;\r\n        this.value = value;\r\n    }\r\n}\r\n\r\n/**\r\n * @param {object} [opts] If present, must be an object\r\n * @param {string} expr JSON path to evaluate\r\n * @param {JSON} obj JSON object to evaluate against\r\n * @param {function} callback Passed 3 arguments: 1) desired payload per `resultType`,\r\n *     2) `\"value\"|\"property\"`, 3) Full returned object with all payloads\r\n * @param {function} otherTypeCallback If `@other()` is at the end of one's query, this\r\n *  will be invoked with the value of the item, its path, its parent, and its parent's\r\n *  property name, and it should return a boolean indicating whether the supplied value\r\n *  belongs to the \"other\" type or not (or it may handle transformations and return `false`).\r\n * @constructor\r\n */\r\nfunction JSONPath (opts, expr, obj, callback, otherTypeCallback) {\r\n    if (!(this instanceof JSONPath)) {\r\n        try {\r\n            return new JSONPath(opts, expr, obj, callback, otherTypeCallback);\r\n        } catch (e) {\r\n            if (!e.avoidNew) {\r\n                throw e;\r\n            }\r\n            return e.value;\r\n        }\r\n    }\r\n\r\n    if (typeof opts === 'string') {\r\n        otherTypeCallback = callback;\r\n        callback = obj;\r\n        obj = expr;\r\n        expr = opts;\r\n        opts = {};\r\n    }\r\n    opts = opts || {};\r\n    const objArgs = opts.hasOwnProperty('json') && opts.hasOwnProperty('path');\r\n    this.json = opts.json || obj;\r\n    this.path = opts.path || expr;\r\n    this.resultType = (opts.resultType && opts.resultType.toLowerCase()) || 'value';\r\n    this.flatten = opts.flatten || false;\r\n    this.wrap = opts.hasOwnProperty('wrap') ? opts.wrap : true;\r\n    this.sandbox = opts.sandbox || {};\r\n    this.preventEval = opts.preventEval || false;\r\n    this.parent = opts.parent || null;\r\n    this.parentProperty = opts.parentProperty || null;\r\n    this.callback = opts.callback || callback || null;\r\n    this.otherTypeCallback = opts.otherTypeCallback || otherTypeCallback || function () {\r\n        throw new Error('You must supply an otherTypeCallback callback option with the @other() operator.');\r\n    };\r\n\r\n    if (opts.autostart !== false) {\r\n        const ret = this.evaluate({\r\n            path: (objArgs ? opts.path : expr),\r\n            json: (objArgs ? opts.json : obj)\r\n        });\r\n        if (!ret || typeof ret !== 'object') {\r\n            throw new NewError(ret);\r\n        }\r\n        return ret;\r\n    }\r\n}\r\n\r\n// PUBLIC METHODS\r\nJSONPath.prototype.evaluate = function (expr, json, callback, otherTypeCallback) {\r\n    const self = this;\r\n    let currParent = this.parent,\r\n        currParentProperty = this.parentProperty;\r\n    let {flatten, wrap} = this;\r\n\r\n    this.currResultType = this.resultType;\r\n    this.currPreventEval = this.preventEval;\r\n    this.currSandbox = this.sandbox;\r\n    callback = callback || this.callback;\r\n    this.currOtherTypeCallback = otherTypeCallback || this.otherTypeCallback;\r\n\r\n    json = json || this.json;\r\n    expr = expr || this.path;\r\n    if (expr && typeof expr === 'object') {\r\n        if (!expr.path) {\r\n            throw new Error('You must supply a \"path\" property when providing an object argument to JSONPath.evaluate().');\r\n        }\r\n        json = expr.hasOwnProperty('json') ? expr.json : json;\r\n        flatten = expr.hasOwnProperty('flatten') ? expr.flatten : flatten;\r\n        this.currResultType = expr.hasOwnProperty('resultType') ? expr.resultType : this.currResultType;\r\n        this.currSandbox = expr.hasOwnProperty('sandbox') ? expr.sandbox : this.currSandbox;\r\n        wrap = expr.hasOwnProperty('wrap') ? expr.wrap : wrap;\r\n        this.currPreventEval = expr.hasOwnProperty('preventEval') ? expr.preventEval : this.currPreventEval;\r\n        callback = expr.hasOwnProperty('callback') ? expr.callback : callback;\r\n        this.currOtherTypeCallback = expr.hasOwnProperty('otherTypeCallback') ? expr.otherTypeCallback : this.currOtherTypeCallback;\r\n        currParent = expr.hasOwnProperty('parent') ? expr.parent : currParent;\r\n        currParentProperty = expr.hasOwnProperty('parentProperty') ? expr.parentProperty : currParentProperty;\r\n        expr = expr.path;\r\n    }\r\n    currParent = currParent || null;\r\n    currParentProperty = currParentProperty || null;\r\n\r\n    if (Array.isArray(expr)) {\r\n        expr = JSONPath.toPathString(expr);\r\n    }\r\n    if (!expr || !json || !allowedResultTypes.includes(this.currResultType)) {\r\n        return;\r\n    }\r\n    this._obj = json;\r\n\r\n    const exprList = JSONPath.toPathArray(expr);\r\n    if (exprList[0] === '$' && exprList.length > 1) { exprList.shift(); }\r\n    this._hasParentSelector = null;\r\n    const result = this\r\n        ._trace(exprList, json, ['$'], currParent, currParentProperty, callback)\r\n        .filter(function (ea) { return ea && !ea.isParentSelector; });\r\n\r\n    if (!result.length) { return wrap ? [] : undefined; }\r\n    if (result.length === 1 && !wrap && !Array.isArray(result[0].value)) {\r\n        return this._getPreferredOutput(result[0]);\r\n    }\r\n    return result.reduce(function (result, ea) {\r\n        const valOrPath = self._getPreferredOutput(ea);\r\n        if (flatten && Array.isArray(valOrPath)) {\r\n            result = result.concat(valOrPath);\r\n        } else {\r\n            result.push(valOrPath);\r\n        }\r\n        return result;\r\n    }, []);\r\n};\r\n\r\n// PRIVATE METHODS\r\n\r\nJSONPath.prototype._getPreferredOutput = function (ea) {\r\n    const resultType = this.currResultType;\r\n    switch (resultType) {\r\n    case 'all':\r\n        ea.pointer = JSONPath.toPointer(ea.path);\r\n        ea.path = typeof ea.path === 'string' ? ea.path : JSONPath.toPathString(ea.path);\r\n        return ea;\r\n    case 'value': case 'parent': case 'parentProperty':\r\n        return ea[resultType];\r\n    case 'path':\r\n        return JSONPath.toPathString(ea[resultType]);\r\n    case 'pointer':\r\n        return JSONPath.toPointer(ea.path);\r\n    }\r\n};\r\n\r\nJSONPath.prototype._handleCallback = function (fullRetObj, callback, type) {\r\n    if (callback) {\r\n        const preferredOutput = this._getPreferredOutput(fullRetObj);\r\n        fullRetObj.path = typeof fullRetObj.path === 'string'\r\n            ? fullRetObj.path\r\n            : JSONPath.toPathString(fullRetObj.path);\r\n        callback(preferredOutput, type, fullRetObj);\r\n    }\r\n};\r\n\r\nJSONPath.prototype._trace = function (\r\n    expr, val, path, parent, parentPropName, callback, literalPriority\r\n) {\r\n    // No expr to follow? return path and value as the result of this trace branch\r\n    let retObj;\r\n    const self = this;\r\n    if (!expr.length) {\r\n        retObj = {path, value: val, parent, parentProperty: parentPropName};\r\n        this._handleCallback(retObj, callback, 'value');\r\n        return retObj;\r\n    }\r\n\r\n    const loc = expr[0], x = expr.slice(1);\r\n\r\n    // We need to gather the return value of recursive trace calls in order to\r\n    // do the parent sel computation.\r\n    const ret = [];\r\n    function addRet (elems) {\r\n        if (Array.isArray(elems)) {\r\n            // This was causing excessive stack size in Node (with or without Babel) against our performance test: `ret.push(...elems);`\r\n            elems.forEach((t) => {\r\n                ret.push(t);\r\n            });\r\n        } else {\r\n            ret.push(elems);\r\n        }\r\n    }\r\n\r\n    if ((typeof loc !== 'string' || literalPriority) && val &&\r\n        hasOwnProperty.call(val, loc)\r\n    ) { // simple case--directly follow property\r\n        addRet(this._trace(x, val[loc], push(path, loc), val, loc, callback));\r\n    } else if (loc === '*') { // all child properties\r\n        this._walk(loc, x, val, path, parent, parentPropName, callback, function (m, l, x, v, p, par, pr, cb) {\r\n            addRet(self._trace(unshift(m, x), v, p, par, pr, cb, true));\r\n        });\r\n    } else if (loc === '..') { // all descendent parent properties\r\n        addRet(this._trace(x, val, path, parent, parentPropName, callback)); // Check remaining expression with val's immediate children\r\n        this._walk(loc, x, val, path, parent, parentPropName, callback, function (m, l, x, v, p, par, pr, cb) {\r\n            // We don't join m and x here because we only want parents, not scalar values\r\n            if (typeof v[m] === 'object') { // Keep going with recursive descent on val's object children\r\n                addRet(self._trace(unshift(l, x), v[m], push(p, m), v, m, cb));\r\n            }\r\n        });\r\n    // The parent sel computation is handled in the frame above using the\r\n    // ancestor object of val\r\n    } else if (loc === '^') {\r\n        // This is not a final endpoint, so we do not invoke the callback here\n        this._hasParentSelector = true;\n        return path.length ? {\r\n            path: path.slice(0, -1),\r\n            expr: x,\r\n            isParentSelector: true\r\n        } : [];\r\n    } else if (loc === '~') { // property name\r\n        retObj = {path: push(path, loc), value: parentPropName, parent, parentProperty: null};\r\n        this._handleCallback(retObj, callback, 'property');\r\n        return retObj;\r\n    } else if (loc === '$') { // root only\r\n        addRet(this._trace(x, val, path, null, null, callback));\r\n    } else if (/^(-?[0-9]*):(-?[0-9]*):?([0-9]*)$/.test(loc)) { // [start:end:step]  Python slice syntax\r\n        addRet(this._slice(loc, x, val, path, parent, parentPropName, callback));\r\n    } else if (loc.indexOf('?(') === 0) { // [?(expr)] (filtering)\r\n        if (this.currPreventEval) {\r\n            throw new Error('Eval [?(expr)] prevented in JSONPath expression.');\r\n        }\r\n        this._walk(loc, x, val, path, parent, parentPropName, callback, function (m, l, x, v, p, par, pr, cb) {\r\n            if (self._eval(l.replace(/^\\?\\((.*?)\\)$/, '$1'), v[m], m, p, par, pr)) {\r\n                addRet(self._trace(unshift(m, x), v, p, par, pr, cb));\r\n            }\r\n        });\r\n    } else if (loc[0] === '(') { // [(expr)] (dynamic property/index)\r\n        if (this.currPreventEval) {\r\n            throw new Error('Eval [(expr)] prevented in JSONPath expression.');\r\n        }\r\n        // As this will resolve to a property name (but we don't know it yet), property and parent information is relative to the parent of the property to which this expression will resolve\r\n        addRet(this._trace(unshift(\r\n            this._eval(loc, val, path[path.length - 1], path.slice(0, -1), parent, parentPropName),\r\n            x\r\n        ), val, path, parent, parentPropName, callback));\r\n    } else if (loc[0] === '@') { // value type: @boolean(), etc.\r\n        let addType = false;\r\n        const valueType = loc.slice(1, -2);\r\n        switch (valueType) {\r\n        case 'scalar':\r\n            if (!val || !(['object', 'function'].includes(typeof val))) {\r\n                addType = true;\r\n            }\r\n            break;\r\n        case 'boolean': case 'string': case 'undefined': case 'function':\r\n            if (typeof val === valueType) { // eslint-disable-line valid-typeof\r\n                addType = true;\r\n            }\r\n            break;\r\n        case 'number':\r\n            if (typeof val === valueType && isFinite(val)) { // eslint-disable-line valid-typeof\r\n                addType = true;\r\n            }\r\n            break;\r\n        case 'nonFinite':\r\n            if (typeof val === 'number' && !isFinite(val)) {\r\n                addType = true;\r\n            }\r\n            break;\r\n        case 'object':\r\n            if (val && typeof val === valueType) { // eslint-disable-line valid-typeof\r\n                addType = true;\r\n            }\r\n            break;\r\n        case 'array':\r\n            if (Array.isArray(val)) {\r\n                addType = true;\r\n            }\r\n            break;\r\n        case 'other':\r\n            addType = this.currOtherTypeCallback(val, path, parent, parentPropName);\r\n            break;\r\n        case 'integer':\r\n            if (val === +val && isFinite(val) && !(val % 1)) {\r\n                addType = true;\r\n            }\r\n            break;\r\n        case 'null':\r\n            if (val === null) {\r\n                addType = true;\r\n            }\r\n            break;\r\n        }\r\n        if (addType) {\r\n            retObj = {path, value: val, parent, parentProperty: parentPropName};\r\n            this._handleCallback(retObj, callback, 'value');\r\n            return retObj;\r\n        }\r\n    } else if (loc[0] === '`' && val && hasOwnProperty.call(val, loc.slice(1))) { // `-escaped property\r\n        const locProp = loc.slice(1);\r\n        addRet(this._trace(x, val[locProp], push(path, locProp), val, locProp, callback, true));\r\n    } else if (loc.includes(',')) { // [name1,name2,...]\r\n        const parts = loc.split(',');\r\n        for (const part of parts) {\r\n            addRet(this._trace(unshift(part, x), val, path, parent, parentPropName, callback));\r\n        }\r\n    } else if (!literalPriority && val && hasOwnProperty.call(val, loc)) { // simple case--directly follow property\r\n        addRet(this._trace(x, val[loc], push(path, loc), val, loc, callback, true));\r\n    }\r\n\r\n    // We check the resulting values for parent selections. For parent\r\n    // selections we discard the value object and continue the trace with the\r\n    // current val object\n    if (this._hasParentSelector) {\n        for (let t = 0; t < ret.length; t++) {\n            const rett = ret[t];\r\n            if (rett.isParentSelector) {\n                const tmp = self._trace(\r\n                    rett.expr, val, rett.path, parent, parentPropName, callback\r\n                );\r\n                if (Array.isArray(tmp)) {\r\n                    ret[t] = tmp[0];\r\n                    const tl = tmp.length;\r\n                    for (let tt = 1; tt < tl; tt++) {\r\n                        t++;\r\n                        ret.splice(t, 0, tmp[tt]);\r\n                    }\r\n                } else {\r\n                    ret[t] = tmp;\r\n                }\r\n            }\r\n        }\n    }\r\n    return ret;\r\n};\n\r\nJSONPath.prototype._walk = function (loc, expr, val, path, parent, parentPropName, callback, f) {\r\n    if (Array.isArray(val)) {\r\n        const n = val.length;\r\n        for (let i = 0; i < n; i++) {\r\n            f(i, loc, expr, val, path, parent, parentPropName, callback);\r\n        }\r\n    } else if (typeof val === 'object') {\r\n        for (const m in val) {\r\n            if (hasOwnProperty.call(val, m)) {\r\n                f(m, loc, expr, val, path, parent, parentPropName, callback);\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nJSONPath.prototype._slice = function (loc, expr, val, path, parent, parentPropName, callback) {\r\n    if (!Array.isArray(val)) { return; }\r\n    const len = val.length, parts = loc.split(':'),\r\n        step = (parts[2] && parseInt(parts[2], 10)) || 1;\r\n    let start = (parts[0] && parseInt(parts[0], 10)) || 0,\r\n        end = (parts[1] && parseInt(parts[1], 10)) || len;\r\n    start = (start < 0) ? Math.max(0, start + len) : Math.min(len, start);\r\n    end = (end < 0) ? Math.max(0, end + len) : Math.min(len, end);\r\n    const ret = [];\r\n    for (let i = start; i < end; i += step) {\r\n        const tmp = this._trace(unshift(i, expr), val, path, parent, parentPropName, callback);\r\n        if (Array.isArray(tmp)) {\r\n            // This was causing excessive stack size in Node (with or without Babel) against our performance test: `ret.push(...tmp);`\r\n            tmp.forEach((t) => {\r\n                ret.push(t);\r\n            });\r\n        } else {\r\n            ret.push(tmp);\r\n        }\r\n    }\r\n    return ret;\r\n};\r\n\r\nJSONPath.prototype._eval = function (code, _v, _vname, path, parent, parentPropName) {\r\n    if (!this._obj || !_v) { return false; }\r\n    if (code.includes('@parentProperty')) {\r\n        this.currSandbox._$_parentProperty = parentPropName;\r\n        code = code.replace(/@parentProperty/g, '_$_parentProperty');\r\n    }\r\n    if (code.includes('@parent')) {\r\n        this.currSandbox._$_parent = parent;\r\n        code = code.replace(/@parent/g, '_$_parent');\r\n    }\r\n    if (code.includes('@property')) {\r\n        this.currSandbox._$_property = _vname;\r\n        code = code.replace(/@property/g, '_$_property');\r\n    }\r\n    if (code.includes('@path')) {\r\n        this.currSandbox._$_path = JSONPath.toPathString(path.concat([_vname]));\r\n        code = code.replace(/@path/g, '_$_path');\r\n    }\r\n    if (code.match(/@([.\\s)[])/)) {\r\n        this.currSandbox._$_v = _v;\r\n        code = code.replace(/@([.\\s)[])/g, '_$_v$1');\r\n    }\r\n    try {\r\n        return vm.runInNewContext(code, this.currSandbox);\r\n    } catch (e) {\r\n        console.log(e);\r\n        throw new Error('jsonPath: ' + e.message + ': ' + code);\r\n    }\r\n};\r\n\r\n// PUBLIC CLASS PROPERTIES AND METHODS\r\n\r\n// Could store the cache object itself\r\nJSONPath.cache = {};\r\n\r\n/**\r\n * @param {string[]} pathArr Array to convert\r\n * @returns {string} The path string\r\n */\r\nJSONPath.toPathString = function (pathArr) {\r\n    const x = pathArr, n = x.length;\r\n    let p = '$';\r\n    for (let i = 1; i < n; i++) {\r\n        if (!(/^(~|\\^|@.*?\\(\\))$/).test(x[i])) {\r\n            p += (/^[0-9*]+$/).test(x[i]) ? ('[' + x[i] + ']') : (\"['\" + x[i] + \"']\");\r\n        }\r\n    }\r\n    return p;\r\n};\r\n\r\n/**\r\n * @param {string} pointer JSON Path\r\n * @returns {string} JSON Pointer\r\n */\r\nJSONPath.toPointer = function (pointer) {\r\n    const x = pointer, n = x.length;\r\n    let p = '';\r\n    for (let i = 1; i < n; i++) {\r\n        if (!(/^(~|\\^|@.*?\\(\\))$/).test(x[i])) {\r\n            p += '/' + x[i].toString()\r\n                .replace(/~/g, '~0')\r\n                .replace(/\\//g, '~1');\r\n        }\r\n    }\r\n    return p;\r\n};\r\n\r\n/**\r\n * @param {string} expr Expression to convert\r\n * @returns {string[]}\r\n */\r\nJSONPath.toPathArray = function (expr) {\r\n    const {cache} = JSONPath;\r\n    if (cache[expr]) { return cache[expr].concat(); }\r\n    const subx = [];\r\n    const normalized = expr\r\n        // Properties\r\n        .replace(\r\n            /@(?:null|boolean|number|string|integer|undefined|nonFinite|scalar|array|object|function|other)\\(\\)/g,\r\n            ';$&;'\r\n        )\r\n        // Parenthetical evaluations (filtering and otherwise), directly\r\n        //   within brackets or single quotes\r\n        .replace(/[['](\\??\\(.*?\\))[\\]']/g, function ($0, $1) {\r\n            return '[#' + (subx.push($1) - 1) + ']';\r\n        })\r\n        // Escape periods and tildes within properties\r\n        .replace(/\\['([^'\\]]*)'\\]/g, function ($0, prop) {\r\n            return \"['\" + prop\r\n                .replace(/\\./g, '%@%')\r\n                .replace(/~/g, '%%@@%%') +\r\n                \"']\";\r\n        })\r\n        // Properties operator\r\n        .replace(/~/g, ';~;')\r\n        // Split by property boundaries\r\n        .replace(/'?\\.'?(?![^[]*\\])|\\['?/g, ';')\r\n        // Reinsert periods within properties\r\n        .replace(/%@%/g, '.')\r\n        // Reinsert tildes within properties\r\n        .replace(/%%@@%%/g, '~')\r\n        // Parent\r\n        .replace(/(?:;)?(\\^+)(?:;)?/g, function ($0, ups) {\r\n            return ';' + ups.split('').join(';') + ';';\r\n        })\r\n        // Descendents\r\n        .replace(/;;;|;;/g, ';..;')\r\n        // Remove trailing\r\n        .replace(/;$|'?\\]|'$/g, '');\r\n\r\n    const exprList = normalized.split(';').map(function (expr) {\r\n        const match = expr.match(/#([0-9]+)/);\r\n        return !match || !match[1] ? expr : subx[match[1]];\r\n    });\r\n    cache[expr] = exprList;\r\n    return cache[expr];\r\n};\r\n\r\nexport {JSONPath};\r\n"],"names":["globalEval","eval","supportsNodeVM","module","exports","navigator","product","allowedResultTypes","hasOwnProperty","Object","prototype","moveToAnotherArray","source","target","conditionCb","il","length","i","push","splice","vm","require","runInNewContext","expr","context","keys","funcs","key","code","reduce","s","func","fString","toString","exec","vr","JSON","stringify","replace","m","arr","item","slice","unshift","NewError","value","avoidNew","Error","JSONPath","opts","obj","callback","otherTypeCallback","this","e","objArgs","json","path","resultType","toLowerCase","flatten","wrap","sandbox","preventEval","parent","parentProperty","autostart","ret","evaluate","_typeof","self","currParent","currParentProperty","currResultType","currPreventEval","currSandbox","currOtherTypeCallback","Array","isArray","toPathString","includes","_obj","exprList","toPathArray","shift","_hasParentSelector","result","_trace","filter","ea","isParentSelector","valOrPath","_getPreferredOutput","concat","undefined","pointer","toPointer","_handleCallback","fullRetObj","type","preferredOutput","val","parentPropName","literalPriority","retObj","loc","x","addRet","elems","forEach","t","call","_walk","l","v","p","par","pr","cb","test","_slice","indexOf","_eval","addType","valueType","isFinite","locProp","parts","split","part","rett","tmp","tl","tt","f","n","len","step","parseInt","start","end","Math","max","min","_v","_vname","_$_parentProperty","_$_parent","_$_property","_$_path","match","_$_v","console","log","message","cache","pathArr","subx","$0","$1","prop","ups","join","map"],"mappings":"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"}