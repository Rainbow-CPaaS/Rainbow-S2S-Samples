/*
 * Rainbow authentication portal
 * # Rainbow authentication portal API guide  ## Preamble  [Download Postman collection][0]  ### Introduction  This guide describes list of API services that are provided by OT Rainbow authentication portal system. Services are used to manage OT Rainbow authentication.  ### Protocol  REST interface is used for sending/receiving OT rainbow API messages.   HTTP request GET is used. Standard HTTP responses are used to provide requested information or error status. There is no session notion in OT Rainbow system, so requests could be issued according stateless model, without transport conservation between them.   JSON is used as a main format for data encoding in message body part. Each request is started with the following pattern /{module}/{version}/ where {module} is a portal module name to address and {version} is a version of used API, par example, “v1.0”.  ### Security considerations  Each request should contain some credential information to authenticate itself. Standard HTTP authentication with basic/bearer modes is used. JSON Web Token mechanism is used to provide authentication information. JWT has a expire timeout that is controlled by OT Rainbow portal to prevent very long token usage. Also authentication with application token is used. The token must be provided in the request HTTP header, using a custom header: APIKey. At server side, token is verified, and if it doesn’t match, 403 Not Allowed response is sent. TLS is used as a transport protocol to support message exchanges between OT Rainbow portal and an application.    [0]: AuthenticationPortalServer_postman.json
 *
 * The version of the OpenAPI document: 1.104.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ale.rainbow.s2s.client.auth.models;

import java.util.Objects;
import java.util.Arrays;
import com.ale.rainbow.s2s.client.auth.models.GetBasicLoginSuccessLoggedInUserCreatedByAdmin;
import com.ale.rainbow.s2s.client.auth.models.PostSamlAssertionSuccessEmails;
import com.ale.rainbow.s2s.client.auth.models.PostSamlAssertionSuccessPhoneNumbers;
import com.ale.rainbow.s2s.client.auth.models.PostSamlAssertionSuccessProfiles;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
import java.io.Serializable;

/**
 * PostSamlAssertionSuccessLoggedInUser
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-02-13T18:40:41.602485+01:00[Europe/Paris]")
public class PostSamlAssertionSuccessLoggedInUser implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_ACTIVATION_DATE = "activationDate";
  @SerializedName(SERIALIZED_NAME_ACTIVATION_DATE)
  private OffsetDateTime activationDate;

  public static final String SERIALIZED_NAME_ADMIN_TYPE = "adminType";
  @SerializedName(SERIALIZED_NAME_ADMIN_TYPE)
  private String adminType;

  public static final String SERIALIZED_NAME_COMPANY_ID = "companyId";
  @SerializedName(SERIALIZED_NAME_COMPANY_ID)
  private String companyId;

  public static final String SERIALIZED_NAME_COMPANY_NAME = "companyName";
  @SerializedName(SERIALIZED_NAME_COMPANY_NAME)
  private String companyName;

  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private String country;

  public static final String SERIALIZED_NAME_CREATED_BY_ADMIN = "createdByAdmin";
  @SerializedName(SERIALIZED_NAME_CREATED_BY_ADMIN)
  private GetBasicLoginSuccessLoggedInUserCreatedByAdmin createdByAdmin;

  public static final String SERIALIZED_NAME_CREATED_BY_SELF_REGISTER = "createdBySelfRegister";
  @SerializedName(SERIALIZED_NAME_CREATED_BY_SELF_REGISTER)
  private Boolean createdBySelfRegister;

  public static final String SERIALIZED_NAME_CREATION_DATE = "creationDate";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  private OffsetDateTime creationDate;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_EMAILS = "emails";
  @SerializedName(SERIALIZED_NAME_EMAILS)
  private List<PostSamlAssertionSuccessEmails> emails = new ArrayList<PostSamlAssertionSuccessEmails>();

  public static final String SERIALIZED_NAME_FIRST_LOGIN_DATE = "firstLoginDate";
  @SerializedName(SERIALIZED_NAME_FIRST_LOGIN_DATE)
  private OffsetDateTime firstLoginDate;

  public static final String SERIALIZED_NAME_FIRST_NAME = "firstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_GUEST_MODE = "guestMode";
  @SerializedName(SERIALIZED_NAME_GUEST_MODE)
  private Boolean guestMode;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_INITIALIZATION_DATE = "initializationDate";
  @SerializedName(SERIALIZED_NAME_INITIALIZATION_DATE)
  private OffsetDateTime initializationDate;

  public static final String SERIALIZED_NAME_INVITED_BY = "invitedBy";
  @SerializedName(SERIALIZED_NAME_INVITED_BY)
  private GetBasicLoginSuccessLoggedInUserCreatedByAdmin invitedBy;

  public static final String SERIALIZED_NAME_IS_A_D_SEARCH_AVAILABLE = "isADSearchAvailable";
  @SerializedName(SERIALIZED_NAME_IS_A_D_SEARCH_AVAILABLE)
  private Boolean isADSearchAvailable;

  public static final String SERIALIZED_NAME_IS_ACTIVE = "isActive";
  @SerializedName(SERIALIZED_NAME_IS_ACTIVE)
  private Boolean isActive;

  public static final String SERIALIZED_NAME_IS_IN_DEFAULT_COMPANY = "isInDefaultCompany";
  @SerializedName(SERIALIZED_NAME_IS_IN_DEFAULT_COMPANY)
  private Boolean isInDefaultCompany;

  public static final String SERIALIZED_NAME_IS_INITIALIZED = "isInitialized";
  @SerializedName(SERIALIZED_NAME_IS_INITIALIZED)
  private Boolean isInitialized;

  public static final String SERIALIZED_NAME_IS_TERMINATED = "isTerminated";
  @SerializedName(SERIALIZED_NAME_IS_TERMINATED)
  private Boolean isTerminated;

  public static final String SERIALIZED_NAME_JID_IM = "jid_im";
  @SerializedName(SERIALIZED_NAME_JID_IM)
  private String jidIm;

  public static final String SERIALIZED_NAME_JID_PASSWORD = "jid_password";
  @SerializedName(SERIALIZED_NAME_JID_PASSWORD)
  private String jidPassword;

  public static final String SERIALIZED_NAME_JID_TEL = "jid_tel";
  @SerializedName(SERIALIZED_NAME_JID_TEL)
  private String jidTel;

  public static final String SERIALIZED_NAME_JOB_TITLE = "jobTitle";
  @SerializedName(SERIALIZED_NAME_JOB_TITLE)
  private String jobTitle;

  public static final String SERIALIZED_NAME_LANGUAGE = "language";
  @SerializedName(SERIALIZED_NAME_LANGUAGE)
  private String language;

  public static final String SERIALIZED_NAME_LAST_AVATAR_UPDATE_DATE = "lastAvatarUpdateDate";
  @SerializedName(SERIALIZED_NAME_LAST_AVATAR_UPDATE_DATE)
  private OffsetDateTime lastAvatarUpdateDate;

  public static final String SERIALIZED_NAME_LAST_LOGIN_DATE = "lastLoginDate";
  @SerializedName(SERIALIZED_NAME_LAST_LOGIN_DATE)
  private OffsetDateTime lastLoginDate;

  public static final String SERIALIZED_NAME_LAST_NAME = "lastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_LAST_UPDATE_DATE = "lastUpdateDate";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATE_DATE)
  private OffsetDateTime lastUpdateDate;

  public static final String SERIALIZED_NAME_LOGGED_SINCE = "loggedSince";
  @SerializedName(SERIALIZED_NAME_LOGGED_SINCE)
  private OffsetDateTime loggedSince;

  public static final String SERIALIZED_NAME_LOGIN_EMAIL = "loginEmail";
  @SerializedName(SERIALIZED_NAME_LOGIN_EMAIL)
  private String loginEmail;

  public static final String SERIALIZED_NAME_NICK_NAME = "nickName";
  @SerializedName(SERIALIZED_NAME_NICK_NAME)
  private String nickName;

  public static final String SERIALIZED_NAME_ORGANISATION_ID = "organisationId";
  @SerializedName(SERIALIZED_NAME_ORGANISATION_ID)
  private String organisationId;

  public static final String SERIALIZED_NAME_PHONE_NUMBERS = "phoneNumbers";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBERS)
  private List<PostSamlAssertionSuccessPhoneNumbers> phoneNumbers = new ArrayList<PostSamlAssertionSuccessPhoneNumbers>();

  public static final String SERIALIZED_NAME_PROFILES = "profiles";
  @SerializedName(SERIALIZED_NAME_PROFILES)
  private List<PostSamlAssertionSuccessProfiles> profiles = new ArrayList<PostSamlAssertionSuccessProfiles>();

  public static final String SERIALIZED_NAME_ROLES = "roles";
  @SerializedName(SERIALIZED_NAME_ROLES)
  private List<String> roles = new ArrayList<String>();

  public static final String SERIALIZED_NAME_SITE_ID = "siteId";
  @SerializedName(SERIALIZED_NAME_SITE_ID)
  private String siteId;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<String> tags = null;

  public static final String SERIALIZED_NAME_TIME_TO_LIVE = "timeToLive";
  @SerializedName(SERIALIZED_NAME_TIME_TO_LIVE)
  private BigDecimal timeToLive;

  public static final String SERIALIZED_NAME_TIMEZONE = "timezone";
  @SerializedName(SERIALIZED_NAME_TIMEZONE)
  private String timezone;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_USER_INFO1 = "userInfo1";
  @SerializedName(SERIALIZED_NAME_USER_INFO1)
  private String userInfo1;

  public static final String SERIALIZED_NAME_USER_INFO2 = "userInfo2";
  @SerializedName(SERIALIZED_NAME_USER_INFO2)
  private String userInfo2;

  /**
   * User visibility &lt;/br&gt; Define if the user can be searched by users being in other companies and if the user can search users being in other companies. &lt;br/&gt; Visibility can be: - &#x60;same_than_company&#x60;: The same visibility than the user&#39;s company&#39;s is applied to the user. When this user visibility is used, if the visibility of the company is changed the user&#39;s visibility will use this company new visibility. - &#x60;public&#x60;: User can be searched by external users / can search external users. User can invite external users / can be invited by external users - &#x60;private&#x60;: User **can&#39;t** be searched by external users / can search external users. User can invite external users / can be invited by external users - &#x60;closed&#x60;: User **can&#39;t** be searched by external users / **can&#39;t** search external users. User can invite external users / can be invited by external users - &#x60;isolated&#x60;: User **can&#39;t** be searched by external users / **can&#39;t** search external users. User **can&#39;t** invite external users / **can&#39;t** be invited by external users - &#x60;none&#x60;:  Default value reserved for guest. User **can&#39;t** be searched by **any users** (even within the same company) / can search external users. User can invite external users / can be invited by external users  External users mean public user not being in user&#39;s company nor user&#39;s organisation nor a company visible by user&#39;s company.
   */
  @JsonAdapter(VisibilityEnum.Adapter.class)
  public enum VisibilityEnum {
    SAME_THAN_COMPANY("same_than_company"),
    
    PUBLIC("public"),
    
    PRIVATE("private"),
    
    CLOSED("closed"),
    
    ISOLATED("isolated"),
    
    NONE("none");

    private String value;

    VisibilityEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static VisibilityEnum fromValue(String value) {
      for (VisibilityEnum b : VisibilityEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<VisibilityEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final VisibilityEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public VisibilityEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return VisibilityEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_VISIBILITY = "visibility";
  @SerializedName(SERIALIZED_NAME_VISIBILITY)
  private VisibilityEnum visibility;


  public PostSamlAssertionSuccessLoggedInUser activationDate(OffsetDateTime activationDate) {
    
    this.activationDate = activationDate;
    return this;
  }

   /**
   * User activation date
   * @return activationDate
  **/
  @ApiModelProperty(required = true, value = "User activation date")

  public OffsetDateTime getActivationDate() {
    return activationDate;
  }


  public void setActivationDate(OffsetDateTime activationDate) {
    this.activationDate = activationDate;
  }


  public PostSamlAssertionSuccessLoggedInUser adminType(String adminType) {
    
    this.adminType = adminType;
    return this;
  }

   /**
   * In case of user&#39;s is &#39;admin&#39;, define the subtype (organisation_admin, company_admin, site_admin (default undefined)
   * @return adminType
  **/
  @ApiModelProperty(required = true, value = "In case of user's is 'admin', define the subtype (organisation_admin, company_admin, site_admin (default undefined)")

  public String getAdminType() {
    return adminType;
  }


  public void setAdminType(String adminType) {
    this.adminType = adminType;
  }


  public PostSamlAssertionSuccessLoggedInUser companyId(String companyId) {
    
    this.companyId = companyId;
    return this;
  }

   /**
   * User company unique identifier
   * @return companyId
  **/
  @ApiModelProperty(required = true, value = "User company unique identifier")

  public String getCompanyId() {
    return companyId;
  }


  public void setCompanyId(String companyId) {
    this.companyId = companyId;
  }


  public PostSamlAssertionSuccessLoggedInUser companyName(String companyName) {
    
    this.companyName = companyName;
    return this;
  }

   /**
   * User company name
   * @return companyName
  **/
  @ApiModelProperty(required = true, value = "User company name")

  public String getCompanyName() {
    return companyName;
  }


  public void setCompanyName(String companyName) {
    this.companyName = companyName;
  }


  public PostSamlAssertionSuccessLoggedInUser country(String country) {
    
    this.country = country;
    return this;
  }

   /**
   * User country (ISO 3166-1 alpha3 format)
   * @return country
  **/
  @ApiModelProperty(required = true, value = "User country (ISO 3166-1 alpha3 format)")

  public String getCountry() {
    return country;
  }


  public void setCountry(String country) {
    this.country = country;
  }


  public PostSamlAssertionSuccessLoggedInUser createdByAdmin(GetBasicLoginSuccessLoggedInUserCreatedByAdmin createdByAdmin) {
    
    this.createdByAdmin = createdByAdmin;
    return this;
  }

   /**
   * Get createdByAdmin
   * @return createdByAdmin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GetBasicLoginSuccessLoggedInUserCreatedByAdmin getCreatedByAdmin() {
    return createdByAdmin;
  }


  public void setCreatedByAdmin(GetBasicLoginSuccessLoggedInUserCreatedByAdmin createdByAdmin) {
    this.createdByAdmin = createdByAdmin;
  }


  public PostSamlAssertionSuccessLoggedInUser createdBySelfRegister(Boolean createdBySelfRegister) {
    
    this.createdBySelfRegister = createdBySelfRegister;
    return this;
  }

   /**
   * true if user has been created using self register
   * @return createdBySelfRegister
  **/
  @ApiModelProperty(required = true, value = "true if user has been created using self register")

  public Boolean getCreatedBySelfRegister() {
    return createdBySelfRegister;
  }


  public void setCreatedBySelfRegister(Boolean createdBySelfRegister) {
    this.createdBySelfRegister = createdBySelfRegister;
  }


  public PostSamlAssertionSuccessLoggedInUser creationDate(OffsetDateTime creationDate) {
    
    this.creationDate = creationDate;
    return this;
  }

   /**
   * User creation date
   * @return creationDate
  **/
  @ApiModelProperty(required = true, value = "User creation date")

  public OffsetDateTime getCreationDate() {
    return creationDate;
  }


  public void setCreationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }


  public PostSamlAssertionSuccessLoggedInUser displayName(String displayName) {
    
    this.displayName = displayName;
    return this;
  }

   /**
   * User display name (firstName + lastName concatenated on server side)
   * @return displayName
  **/
  @ApiModelProperty(required = true, value = "User display name (firstName + lastName concatenated on server side)")

  public String getDisplayName() {
    return displayName;
  }


  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public PostSamlAssertionSuccessLoggedInUser emails(List<PostSamlAssertionSuccessEmails> emails) {
    
    this.emails = emails;
    return this;
  }

  public PostSamlAssertionSuccessLoggedInUser addEmailsItem(PostSamlAssertionSuccessEmails emailsItem) {
    this.emails.add(emailsItem);
    return this;
  }

   /**
   * Array of user emails addresses objects
   * @return emails
  **/
  @ApiModelProperty(required = true, value = "Array of user emails addresses objects")

  public List<PostSamlAssertionSuccessEmails> getEmails() {
    return emails;
  }


  public void setEmails(List<PostSamlAssertionSuccessEmails> emails) {
    this.emails = emails;
  }


  public PostSamlAssertionSuccessLoggedInUser firstLoginDate(OffsetDateTime firstLoginDate) {
    
    this.firstLoginDate = firstLoginDate;
    return this;
  }

   /**
   * Date of first user login (only set the first time user logs in, null if user never logged in)
   * @return firstLoginDate
  **/
  @ApiModelProperty(required = true, value = "Date of first user login (only set the first time user logs in, null if user never logged in)")

  public OffsetDateTime getFirstLoginDate() {
    return firstLoginDate;
  }


  public void setFirstLoginDate(OffsetDateTime firstLoginDate) {
    this.firstLoginDate = firstLoginDate;
  }


  public PostSamlAssertionSuccessLoggedInUser firstName(String firstName) {
    
    this.firstName = firstName;
    return this;
  }

   /**
   * User first name
   * @return firstName
  **/
  @ApiModelProperty(required = true, value = "User first name")

  public String getFirstName() {
    return firstName;
  }


  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public PostSamlAssertionSuccessLoggedInUser guestMode(Boolean guestMode) {
    
    this.guestMode = guestMode;
    return this;
  }

   /**
   * Indicated a user embedded in a chat or conference room, as guest, with limited rights until he finalizes his registration.
   * @return guestMode
  **/
  @ApiModelProperty(required = true, value = "Indicated a user embedded in a chat or conference room, as guest, with limited rights until he finalizes his registration.")

  public Boolean getGuestMode() {
    return guestMode;
  }


  public void setGuestMode(Boolean guestMode) {
    this.guestMode = guestMode;
  }


  public PostSamlAssertionSuccessLoggedInUser id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * User unique identifier
   * @return id
  **/
  @ApiModelProperty(required = true, value = "User unique identifier")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public PostSamlAssertionSuccessLoggedInUser initializationDate(OffsetDateTime initializationDate) {
    
    this.initializationDate = initializationDate;
    return this;
  }

   /**
   * User initialization date
   * @return initializationDate
  **/
  @ApiModelProperty(required = true, value = "User initialization date")

  public OffsetDateTime getInitializationDate() {
    return initializationDate;
  }


  public void setInitializationDate(OffsetDateTime initializationDate) {
    this.initializationDate = initializationDate;
  }


  public PostSamlAssertionSuccessLoggedInUser invitedBy(GetBasicLoginSuccessLoggedInUserCreatedByAdmin invitedBy) {
    
    this.invitedBy = invitedBy;
    return this;
  }

   /**
   * Get invitedBy
   * @return invitedBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GetBasicLoginSuccessLoggedInUserCreatedByAdmin getInvitedBy() {
    return invitedBy;
  }


  public void setInvitedBy(GetBasicLoginSuccessLoggedInUserCreatedByAdmin invitedBy) {
    this.invitedBy = invitedBy;
  }


  public PostSamlAssertionSuccessLoggedInUser isADSearchAvailable(Boolean isADSearchAvailable) {
    
    this.isADSearchAvailable = isADSearchAvailable;
    return this;
  }

   /**
   * Is ActiveDirectory (Office365) search available for this user
   * @return isADSearchAvailable
  **/
  @ApiModelProperty(required = true, value = "Is ActiveDirectory (Office365) search available for this user")

  public Boolean getIsADSearchAvailable() {
    return isADSearchAvailable;
  }


  public void setIsADSearchAvailable(Boolean isADSearchAvailable) {
    this.isADSearchAvailable = isADSearchAvailable;
  }


  public PostSamlAssertionSuccessLoggedInUser isActive(Boolean isActive) {
    
    this.isActive = isActive;
    return this;
  }

   /**
   * Is user active
   * @return isActive
  **/
  @ApiModelProperty(required = true, value = "Is user active")

  public Boolean getIsActive() {
    return isActive;
  }


  public void setIsActive(Boolean isActive) {
    this.isActive = isActive;
  }


  public PostSamlAssertionSuccessLoggedInUser isInDefaultCompany(Boolean isInDefaultCompany) {
    
    this.isInDefaultCompany = isInDefaultCompany;
    return this;
  }

   /**
   * Is user in default company
   * @return isInDefaultCompany
  **/
  @ApiModelProperty(required = true, value = "Is user in default company")

  public Boolean getIsInDefaultCompany() {
    return isInDefaultCompany;
  }


  public void setIsInDefaultCompany(Boolean isInDefaultCompany) {
    this.isInDefaultCompany = isInDefaultCompany;
  }


  public PostSamlAssertionSuccessLoggedInUser isInitialized(Boolean isInitialized) {
    
    this.isInitialized = isInitialized;
    return this;
  }

   /**
   * Is user initialized
   * @return isInitialized
  **/
  @ApiModelProperty(required = true, value = "Is user initialized")

  public Boolean getIsInitialized() {
    return isInitialized;
  }


  public void setIsInitialized(Boolean isInitialized) {
    this.isInitialized = isInitialized;
  }


  public PostSamlAssertionSuccessLoggedInUser isTerminated(Boolean isTerminated) {
    
    this.isTerminated = isTerminated;
    return this;
  }

   /**
   * Indicates if the Rainbow account of this user has been deleted
   * @return isTerminated
  **/
  @ApiModelProperty(required = true, value = "Indicates if the Rainbow account of this user has been deleted")

  public Boolean getIsTerminated() {
    return isTerminated;
  }


  public void setIsTerminated(Boolean isTerminated) {
    this.isTerminated = isTerminated;
  }


  public PostSamlAssertionSuccessLoggedInUser jidIm(String jidIm) {
    
    this.jidIm = jidIm;
    return this;
  }

   /**
   * User Jabber IM identifier
   * @return jidIm
  **/
  @ApiModelProperty(required = true, value = "User Jabber IM identifier")

  public String getJidIm() {
    return jidIm;
  }


  public void setJidIm(String jidIm) {
    this.jidIm = jidIm;
  }


  public PostSamlAssertionSuccessLoggedInUser jidPassword(String jidPassword) {
    
    this.jidPassword = jidPassword;
    return this;
  }

   /**
   * User Jabber TEL identifier
   * @return jidPassword
  **/
  @ApiModelProperty(required = true, value = "User Jabber TEL identifier")

  public String getJidPassword() {
    return jidPassword;
  }


  public void setJidPassword(String jidPassword) {
    this.jidPassword = jidPassword;
  }


  public PostSamlAssertionSuccessLoggedInUser jidTel(String jidTel) {
    
    this.jidTel = jidTel;
    return this;
  }

   /**
   * User Jabber TEL identifier
   * @return jidTel
  **/
  @ApiModelProperty(required = true, value = "User Jabber TEL identifier")

  public String getJidTel() {
    return jidTel;
  }


  public void setJidTel(String jidTel) {
    this.jidTel = jidTel;
  }


  public PostSamlAssertionSuccessLoggedInUser jobTitle(String jobTitle) {
    
    this.jobTitle = jobTitle;
    return this;
  }

   /**
   * User job title
   * @return jobTitle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "User job title")

  public String getJobTitle() {
    return jobTitle;
  }


  public void setJobTitle(String jobTitle) {
    this.jobTitle = jobTitle;
  }


  public PostSamlAssertionSuccessLoggedInUser language(String language) {
    
    this.language = language;
    return this;
  }

   /**
   * User language (ISO 639-1 code format, with possibility of regional variation. Ex: both &#39;en&#39; and &#39;en-US&#39; are supported)
   * @return language
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "User language (ISO 639-1 code format, with possibility of regional variation. Ex: both 'en' and 'en-US' are supported)")

  public String getLanguage() {
    return language;
  }


  public void setLanguage(String language) {
    this.language = language;
  }


  public PostSamlAssertionSuccessLoggedInUser lastAvatarUpdateDate(OffsetDateTime lastAvatarUpdateDate) {
    
    this.lastAvatarUpdateDate = lastAvatarUpdateDate;
    return this;
  }

   /**
   * Date of last user avatar create/update, null if no avatar
   * @return lastAvatarUpdateDate
  **/
  @ApiModelProperty(required = true, value = "Date of last user avatar create/update, null if no avatar")

  public OffsetDateTime getLastAvatarUpdateDate() {
    return lastAvatarUpdateDate;
  }


  public void setLastAvatarUpdateDate(OffsetDateTime lastAvatarUpdateDate) {
    this.lastAvatarUpdateDate = lastAvatarUpdateDate;
  }


  public PostSamlAssertionSuccessLoggedInUser lastLoginDate(OffsetDateTime lastLoginDate) {
    
    this.lastLoginDate = lastLoginDate;
    return this;
  }

   /**
   * Date of last user login (defined even if user is logged out)
   * @return lastLoginDate
  **/
  @ApiModelProperty(required = true, value = "Date of last user login (defined even if user is logged out)")

  public OffsetDateTime getLastLoginDate() {
    return lastLoginDate;
  }


  public void setLastLoginDate(OffsetDateTime lastLoginDate) {
    this.lastLoginDate = lastLoginDate;
  }


  public PostSamlAssertionSuccessLoggedInUser lastName(String lastName) {
    
    this.lastName = lastName;
    return this;
  }

   /**
   * User last name
   * @return lastName
  **/
  @ApiModelProperty(required = true, value = "User last name")

  public String getLastName() {
    return lastName;
  }


  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public PostSamlAssertionSuccessLoggedInUser lastUpdateDate(OffsetDateTime lastUpdateDate) {
    
    this.lastUpdateDate = lastUpdateDate;
    return this;
  }

   /**
   * Date of last user update (whatever the field updated)
   * @return lastUpdateDate
  **/
  @ApiModelProperty(required = true, value = "Date of last user update (whatever the field updated)")

  public OffsetDateTime getLastUpdateDate() {
    return lastUpdateDate;
  }


  public void setLastUpdateDate(OffsetDateTime lastUpdateDate) {
    this.lastUpdateDate = lastUpdateDate;
  }


  public PostSamlAssertionSuccessLoggedInUser loggedSince(OffsetDateTime loggedSince) {
    
    this.loggedSince = loggedSince;
    return this;
  }

   /**
   * Date of last user login (null if user is logged out)
   * @return loggedSince
  **/
  @ApiModelProperty(required = true, value = "Date of last user login (null if user is logged out)")

  public OffsetDateTime getLoggedSince() {
    return loggedSince;
  }


  public void setLoggedSince(OffsetDateTime loggedSince) {
    this.loggedSince = loggedSince;
  }


  public PostSamlAssertionSuccessLoggedInUser loginEmail(String loginEmail) {
    
    this.loginEmail = loginEmail;
    return this;
  }

   /**
   * User email address (used for login)
   * @return loginEmail
  **/
  @ApiModelProperty(required = true, value = "User email address (used for login)")

  public String getLoginEmail() {
    return loginEmail;
  }


  public void setLoginEmail(String loginEmail) {
    this.loginEmail = loginEmail;
  }


  public PostSamlAssertionSuccessLoggedInUser nickName(String nickName) {
    
    this.nickName = nickName;
    return this;
  }

   /**
   * User nickName
   * @return nickName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "User nickName")

  public String getNickName() {
    return nickName;
  }


  public void setNickName(String nickName) {
    this.nickName = nickName;
  }


  public PostSamlAssertionSuccessLoggedInUser organisationId(String organisationId) {
    
    this.organisationId = organisationId;
    return this;
  }

   /**
   * In addition to User companyId, optional identifier to indicate the user belongs also to an organization
   * @return organisationId
  **/
  @ApiModelProperty(required = true, value = "In addition to User companyId, optional identifier to indicate the user belongs also to an organization")

  public String getOrganisationId() {
    return organisationId;
  }


  public void setOrganisationId(String organisationId) {
    this.organisationId = organisationId;
  }


  public PostSamlAssertionSuccessLoggedInUser phoneNumbers(List<PostSamlAssertionSuccessPhoneNumbers> phoneNumbers) {
    
    this.phoneNumbers = phoneNumbers;
    return this;
  }

  public PostSamlAssertionSuccessLoggedInUser addPhoneNumbersItem(PostSamlAssertionSuccessPhoneNumbers phoneNumbersItem) {
    this.phoneNumbers.add(phoneNumbersItem);
    return this;
  }

   /**
   * Array of user phone numbers objects. &lt;br/&gt; Phone number objects can: &lt;ul&gt;     &lt;li&gt; be created by user (information filled by user),&lt;/li&gt;     &lt;li&gt; come from association with a system (pbx) device (association is done by admin).&lt;/li&gt; &lt;/ul&gt;
   * @return phoneNumbers
  **/
  @ApiModelProperty(required = true, value = "Array of user phone numbers objects. <br/> Phone number objects can: <ul>     <li> be created by user (information filled by user),</li>     <li> come from association with a system (pbx) device (association is done by admin).</li> </ul>")

  public List<PostSamlAssertionSuccessPhoneNumbers> getPhoneNumbers() {
    return phoneNumbers;
  }


  public void setPhoneNumbers(List<PostSamlAssertionSuccessPhoneNumbers> phoneNumbers) {
    this.phoneNumbers = phoneNumbers;
  }


  public PostSamlAssertionSuccessLoggedInUser profiles(List<PostSamlAssertionSuccessProfiles> profiles) {
    
    this.profiles = profiles;
    return this;
  }

  public PostSamlAssertionSuccessLoggedInUser addProfilesItem(PostSamlAssertionSuccessProfiles profilesItem) {
    this.profiles.add(profilesItem);
    return this;
  }

   /**
   * User profile Objects.
   * @return profiles
  **/
  @ApiModelProperty(required = true, value = "User profile Objects.")

  public List<PostSamlAssertionSuccessProfiles> getProfiles() {
    return profiles;
  }


  public void setProfiles(List<PostSamlAssertionSuccessProfiles> profiles) {
    this.profiles = profiles;
  }


  public PostSamlAssertionSuccessLoggedInUser roles(List<String> roles) {
    
    this.roles = roles;
    return this;
  }

  public PostSamlAssertionSuccessLoggedInUser addRolesItem(String rolesItem) {
    this.roles.add(rolesItem);
    return this;
  }

   /**
   * List of user roles (Array of String)
   * @return roles
  **/
  @ApiModelProperty(required = true, value = "List of user roles (Array of String)")

  public List<String> getRoles() {
    return roles;
  }


  public void setRoles(List<String> roles) {
    this.roles = roles;
  }


  public PostSamlAssertionSuccessLoggedInUser siteId(String siteId) {
    
    this.siteId = siteId;
    return this;
  }

   /**
   * In addition to User companyId, optional identifier to indicate the user belongs also to a site
   * @return siteId
  **/
  @ApiModelProperty(required = true, value = "In addition to User companyId, optional identifier to indicate the user belongs also to a site")

  public String getSiteId() {
    return siteId;
  }


  public void setSiteId(String siteId) {
    this.siteId = siteId;
  }


  public PostSamlAssertionSuccessLoggedInUser tags(List<String> tags) {
    
    this.tags = tags;
    return this;
  }

  public PostSamlAssertionSuccessLoggedInUser addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * An Array of free tags associated to the user. &lt;br/&gt; A maximum of 5 tags is allowed, each tag can have a maximum length of 64 characters. &lt;br/&gt; &#x60;tags&#x60; can only be set by users who have administrator rights on the user. The user can&#39;t modify the tags. &lt;br/&gt; The tags are visible by the user and all users belonging to his organisation/company, and can be used with the search API to search the user based on his tags.
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An Array of free tags associated to the user. <br/> A maximum of 5 tags is allowed, each tag can have a maximum length of 64 characters. <br/> `tags` can only be set by users who have administrator rights on the user. The user can't modify the tags. <br/> The tags are visible by the user and all users belonging to his organisation/company, and can be used with the search API to search the user based on his tags.")

  public List<String> getTags() {
    return tags;
  }


  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  public PostSamlAssertionSuccessLoggedInUser timeToLive(BigDecimal timeToLive) {
    
    this.timeToLive = timeToLive;
    return this;
  }

   /**
   * Duration in second to wait before automatically starting a user deletion from the creation date. &lt;br/&gt; Once the timeToLive has been reached, the user won&#39;t be usable to use APIs anymore (error 401523). His account may then be deleted from the database at any moment. &lt;br/&gt; Value -1 means timeToLive is disable (i.e. user account will not expire).
   * @return timeToLive
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Duration in second to wait before automatically starting a user deletion from the creation date. <br/> Once the timeToLive has been reached, the user won't be usable to use APIs anymore (error 401523). His account may then be deleted from the database at any moment. <br/> Value -1 means timeToLive is disable (i.e. user account will not expire).")

  public BigDecimal getTimeToLive() {
    return timeToLive;
  }


  public void setTimeToLive(BigDecimal timeToLive) {
    this.timeToLive = timeToLive;
  }


  public PostSamlAssertionSuccessLoggedInUser timezone(String timezone) {
    
    this.timezone = timezone;
    return this;
  }

   /**
   * User timezone name
   * @return timezone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "User timezone name")

  public String getTimezone() {
    return timezone;
  }


  public void setTimezone(String timezone) {
    this.timezone = timezone;
  }


  public PostSamlAssertionSuccessLoggedInUser title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * User title (honorifics title, like Mr, Mrs, Sir, Lord, Lady, Dr, Prof,...)
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "User title (honorifics title, like Mr, Mrs, Sir, Lord, Lady, Dr, Prof,...)")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public PostSamlAssertionSuccessLoggedInUser userInfo1(String userInfo1) {
    
    this.userInfo1 = userInfo1;
    return this;
  }

   /**
   * Free field that admin can use to link their users to their IS/IT tools / to perform analytics (this field is output in the CDR file)
   * @return userInfo1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Free field that admin can use to link their users to their IS/IT tools / to perform analytics (this field is output in the CDR file)")

  public String getUserInfo1() {
    return userInfo1;
  }


  public void setUserInfo1(String userInfo1) {
    this.userInfo1 = userInfo1;
  }


  public PostSamlAssertionSuccessLoggedInUser userInfo2(String userInfo2) {
    
    this.userInfo2 = userInfo2;
    return this;
  }

   /**
   * 2nd Free field that admin can use to link their users to their IS/IT tools / to perform analytics (this field is output in the CDR file)
   * @return userInfo2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "2nd Free field that admin can use to link their users to their IS/IT tools / to perform analytics (this field is output in the CDR file)")

  public String getUserInfo2() {
    return userInfo2;
  }


  public void setUserInfo2(String userInfo2) {
    this.userInfo2 = userInfo2;
  }


  public PostSamlAssertionSuccessLoggedInUser visibility(VisibilityEnum visibility) {
    
    this.visibility = visibility;
    return this;
  }

   /**
   * User visibility &lt;/br&gt; Define if the user can be searched by users being in other companies and if the user can search users being in other companies. &lt;br/&gt; Visibility can be: - &#x60;same_than_company&#x60;: The same visibility than the user&#39;s company&#39;s is applied to the user. When this user visibility is used, if the visibility of the company is changed the user&#39;s visibility will use this company new visibility. - &#x60;public&#x60;: User can be searched by external users / can search external users. User can invite external users / can be invited by external users - &#x60;private&#x60;: User **can&#39;t** be searched by external users / can search external users. User can invite external users / can be invited by external users - &#x60;closed&#x60;: User **can&#39;t** be searched by external users / **can&#39;t** search external users. User can invite external users / can be invited by external users - &#x60;isolated&#x60;: User **can&#39;t** be searched by external users / **can&#39;t** search external users. User **can&#39;t** invite external users / **can&#39;t** be invited by external users - &#x60;none&#x60;:  Default value reserved for guest. User **can&#39;t** be searched by **any users** (even within the same company) / can search external users. User can invite external users / can be invited by external users  External users mean public user not being in user&#39;s company nor user&#39;s organisation nor a company visible by user&#39;s company.
   * @return visibility
  **/
  @ApiModelProperty(required = true, value = "User visibility </br> Define if the user can be searched by users being in other companies and if the user can search users being in other companies. <br/> Visibility can be: - `same_than_company`: The same visibility than the user's company's is applied to the user. When this user visibility is used, if the visibility of the company is changed the user's visibility will use this company new visibility. - `public`: User can be searched by external users / can search external users. User can invite external users / can be invited by external users - `private`: User **can't** be searched by external users / can search external users. User can invite external users / can be invited by external users - `closed`: User **can't** be searched by external users / **can't** search external users. User can invite external users / can be invited by external users - `isolated`: User **can't** be searched by external users / **can't** search external users. User **can't** invite external users / **can't** be invited by external users - `none`:  Default value reserved for guest. User **can't** be searched by **any users** (even within the same company) / can search external users. User can invite external users / can be invited by external users  External users mean public user not being in user's company nor user's organisation nor a company visible by user's company.")

  public VisibilityEnum getVisibility() {
    return visibility;
  }


  public void setVisibility(VisibilityEnum visibility) {
    this.visibility = visibility;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostSamlAssertionSuccessLoggedInUser postSamlAssertionSuccessLoggedInUser = (PostSamlAssertionSuccessLoggedInUser) o;
    return Objects.equals(this.activationDate, postSamlAssertionSuccessLoggedInUser.activationDate) &&
        Objects.equals(this.adminType, postSamlAssertionSuccessLoggedInUser.adminType) &&
        Objects.equals(this.companyId, postSamlAssertionSuccessLoggedInUser.companyId) &&
        Objects.equals(this.companyName, postSamlAssertionSuccessLoggedInUser.companyName) &&
        Objects.equals(this.country, postSamlAssertionSuccessLoggedInUser.country) &&
        Objects.equals(this.createdByAdmin, postSamlAssertionSuccessLoggedInUser.createdByAdmin) &&
        Objects.equals(this.createdBySelfRegister, postSamlAssertionSuccessLoggedInUser.createdBySelfRegister) &&
        Objects.equals(this.creationDate, postSamlAssertionSuccessLoggedInUser.creationDate) &&
        Objects.equals(this.displayName, postSamlAssertionSuccessLoggedInUser.displayName) &&
        Objects.equals(this.emails, postSamlAssertionSuccessLoggedInUser.emails) &&
        Objects.equals(this.firstLoginDate, postSamlAssertionSuccessLoggedInUser.firstLoginDate) &&
        Objects.equals(this.firstName, postSamlAssertionSuccessLoggedInUser.firstName) &&
        Objects.equals(this.guestMode, postSamlAssertionSuccessLoggedInUser.guestMode) &&
        Objects.equals(this.id, postSamlAssertionSuccessLoggedInUser.id) &&
        Objects.equals(this.initializationDate, postSamlAssertionSuccessLoggedInUser.initializationDate) &&
        Objects.equals(this.invitedBy, postSamlAssertionSuccessLoggedInUser.invitedBy) &&
        Objects.equals(this.isADSearchAvailable, postSamlAssertionSuccessLoggedInUser.isADSearchAvailable) &&
        Objects.equals(this.isActive, postSamlAssertionSuccessLoggedInUser.isActive) &&
        Objects.equals(this.isInDefaultCompany, postSamlAssertionSuccessLoggedInUser.isInDefaultCompany) &&
        Objects.equals(this.isInitialized, postSamlAssertionSuccessLoggedInUser.isInitialized) &&
        Objects.equals(this.isTerminated, postSamlAssertionSuccessLoggedInUser.isTerminated) &&
        Objects.equals(this.jidIm, postSamlAssertionSuccessLoggedInUser.jidIm) &&
        Objects.equals(this.jidPassword, postSamlAssertionSuccessLoggedInUser.jidPassword) &&
        Objects.equals(this.jidTel, postSamlAssertionSuccessLoggedInUser.jidTel) &&
        Objects.equals(this.jobTitle, postSamlAssertionSuccessLoggedInUser.jobTitle) &&
        Objects.equals(this.language, postSamlAssertionSuccessLoggedInUser.language) &&
        Objects.equals(this.lastAvatarUpdateDate, postSamlAssertionSuccessLoggedInUser.lastAvatarUpdateDate) &&
        Objects.equals(this.lastLoginDate, postSamlAssertionSuccessLoggedInUser.lastLoginDate) &&
        Objects.equals(this.lastName, postSamlAssertionSuccessLoggedInUser.lastName) &&
        Objects.equals(this.lastUpdateDate, postSamlAssertionSuccessLoggedInUser.lastUpdateDate) &&
        Objects.equals(this.loggedSince, postSamlAssertionSuccessLoggedInUser.loggedSince) &&
        Objects.equals(this.loginEmail, postSamlAssertionSuccessLoggedInUser.loginEmail) &&
        Objects.equals(this.nickName, postSamlAssertionSuccessLoggedInUser.nickName) &&
        Objects.equals(this.organisationId, postSamlAssertionSuccessLoggedInUser.organisationId) &&
        Objects.equals(this.phoneNumbers, postSamlAssertionSuccessLoggedInUser.phoneNumbers) &&
        Objects.equals(this.profiles, postSamlAssertionSuccessLoggedInUser.profiles) &&
        Objects.equals(this.roles, postSamlAssertionSuccessLoggedInUser.roles) &&
        Objects.equals(this.siteId, postSamlAssertionSuccessLoggedInUser.siteId) &&
        Objects.equals(this.tags, postSamlAssertionSuccessLoggedInUser.tags) &&
        Objects.equals(this.timeToLive, postSamlAssertionSuccessLoggedInUser.timeToLive) &&
        Objects.equals(this.timezone, postSamlAssertionSuccessLoggedInUser.timezone) &&
        Objects.equals(this.title, postSamlAssertionSuccessLoggedInUser.title) &&
        Objects.equals(this.userInfo1, postSamlAssertionSuccessLoggedInUser.userInfo1) &&
        Objects.equals(this.userInfo2, postSamlAssertionSuccessLoggedInUser.userInfo2) &&
        Objects.equals(this.visibility, postSamlAssertionSuccessLoggedInUser.visibility);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activationDate, adminType, companyId, companyName, country, createdByAdmin, createdBySelfRegister, creationDate, displayName, emails, firstLoginDate, firstName, guestMode, id, initializationDate, invitedBy, isADSearchAvailable, isActive, isInDefaultCompany, isInitialized, isTerminated, jidIm, jidPassword, jidTel, jobTitle, language, lastAvatarUpdateDate, lastLoginDate, lastName, lastUpdateDate, loggedSince, loginEmail, nickName, organisationId, phoneNumbers, profiles, roles, siteId, tags, timeToLive, timezone, title, userInfo1, userInfo2, visibility);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostSamlAssertionSuccessLoggedInUser {\n");
    sb.append("    activationDate: ").append(toIndentedString(activationDate)).append("\n");
    sb.append("    adminType: ").append(toIndentedString(adminType)).append("\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    companyName: ").append(toIndentedString(companyName)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    createdByAdmin: ").append(toIndentedString(createdByAdmin)).append("\n");
    sb.append("    createdBySelfRegister: ").append(toIndentedString(createdBySelfRegister)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    emails: ").append(toIndentedString(emails)).append("\n");
    sb.append("    firstLoginDate: ").append(toIndentedString(firstLoginDate)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    guestMode: ").append(toIndentedString(guestMode)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    initializationDate: ").append(toIndentedString(initializationDate)).append("\n");
    sb.append("    invitedBy: ").append(toIndentedString(invitedBy)).append("\n");
    sb.append("    isADSearchAvailable: ").append(toIndentedString(isADSearchAvailable)).append("\n");
    sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
    sb.append("    isInDefaultCompany: ").append(toIndentedString(isInDefaultCompany)).append("\n");
    sb.append("    isInitialized: ").append(toIndentedString(isInitialized)).append("\n");
    sb.append("    isTerminated: ").append(toIndentedString(isTerminated)).append("\n");
    sb.append("    jidIm: ").append(toIndentedString(jidIm)).append("\n");
    sb.append("    jidPassword: ").append(toIndentedString(jidPassword)).append("\n");
    sb.append("    jidTel: ").append(toIndentedString(jidTel)).append("\n");
    sb.append("    jobTitle: ").append(toIndentedString(jobTitle)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    lastAvatarUpdateDate: ").append(toIndentedString(lastAvatarUpdateDate)).append("\n");
    sb.append("    lastLoginDate: ").append(toIndentedString(lastLoginDate)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    lastUpdateDate: ").append(toIndentedString(lastUpdateDate)).append("\n");
    sb.append("    loggedSince: ").append(toIndentedString(loggedSince)).append("\n");
    sb.append("    loginEmail: ").append(toIndentedString(loginEmail)).append("\n");
    sb.append("    nickName: ").append(toIndentedString(nickName)).append("\n");
    sb.append("    organisationId: ").append(toIndentedString(organisationId)).append("\n");
    sb.append("    phoneNumbers: ").append(toIndentedString(phoneNumbers)).append("\n");
    sb.append("    profiles: ").append(toIndentedString(profiles)).append("\n");
    sb.append("    roles: ").append(toIndentedString(roles)).append("\n");
    sb.append("    siteId: ").append(toIndentedString(siteId)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    timeToLive: ").append(toIndentedString(timeToLive)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    userInfo1: ").append(toIndentedString(userInfo1)).append("\n");
    sb.append("    userInfo2: ").append(toIndentedString(userInfo2)).append("\n");
    sb.append("    visibility: ").append(toIndentedString(visibility)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

