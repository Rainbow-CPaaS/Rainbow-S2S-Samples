/**
 * Rainbow admin portal
 * # Rainbow administrator portal API guide  ## Preamble  ### Introduction  This guide describes list of API services that are provided by OT Rainbow management portal system. Services are used to manage OT Rainbow system entities  ### Protocol  REST interface is used for sending/receiving OT rainbow API messages. HTTP requests GET, DELETE, POST, UPDATE are used. Standard HTTP responses are used to provide requested information or error status. There is no session notion in OT Rainbow system, so requests could be issued according stateless model, without transport conservation between them. Additional data could be provided in message body. JSON is used as a main format for data encoding in message body part. Each request is started with the following pattern /{module}/{version}/ where {module} is a portal module name to address and {version} is a version of used API, par example, “v1.0”.  ### Security considerations  Each request should contain some credential information to authenticate itself. Standard HTTP authentication with basic/bearer modes is used. JSON Web Token mechanism is used to provide authentication information. JWT has a expire timeout that is controlled by OT Rainbow portal to prevent very long token usage. Also authentication with application token is used. The token must be provided in the request HTTP header, using a custom header: APIKey. At server side, token is verified, and if it doesn’t match, 403 Not Allowed response is sent. TLS is used as a transport protocol to support message exchanges between OT Rainbow portal and an application.  
 *
 * The version of the OpenAPI document: 1.82.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.1.2
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/DeleteJoinCompaniesLinksByIdSuccess', 'model/GetJoinCompaniesLinksByIdSuccess', 'model/GetJoinCompaniesLinksSuccess', 'model/PostJoinCompaniesLinks', 'model/PostJoinCompaniesLinksSuccess'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/DeleteJoinCompaniesLinksByIdSuccess'), require('../model/GetJoinCompaniesLinksByIdSuccess'), require('../model/GetJoinCompaniesLinksSuccess'), require('../model/PostJoinCompaniesLinks'), require('../model/PostJoinCompaniesLinksSuccess'));
  } else {
    // Browser globals (root is window)
    if (!root.RainbowAdminPortal) {
      root.RainbowAdminPortal = {};
    }
    root.RainbowAdminPortal.JoinCompaniesLinksApi = factory(root.RainbowAdminPortal.ApiClient, root.RainbowAdminPortal.DeleteJoinCompaniesLinksByIdSuccess, root.RainbowAdminPortal.GetJoinCompaniesLinksByIdSuccess, root.RainbowAdminPortal.GetJoinCompaniesLinksSuccess, root.RainbowAdminPortal.PostJoinCompaniesLinks, root.RainbowAdminPortal.PostJoinCompaniesLinksSuccess);
  }
}(this, function(ApiClient, DeleteJoinCompaniesLinksByIdSuccess, GetJoinCompaniesLinksByIdSuccess, GetJoinCompaniesLinksSuccess, PostJoinCompaniesLinks, PostJoinCompaniesLinksSuccess) {
  'use strict';

  /**
   * JoinCompaniesLinks service.
   * @module api/JoinCompaniesLinksApi
   * @version 1.82.0
   */

  /**
   * Constructs a new JoinCompaniesLinksApi. 
   * @alias module:api/JoinCompaniesLinksApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;



    /**
     * Delete a join company link
     * This API can be used by company `admin` users to delete a join company link by id       Example: DELETE https://openrainbow.com/api/rainbow/admin/v1.0/companies/5703d0d49ccf39843c7ef897/join-companies/links/5819ed7c9547b313509237d6
     * @param {String} companyId Company unique identifier (like 569ce8c8f9336c471b98eda1)
     * @param {String} joinCompanyLinkId Join company link unique identifier (like 5819ed7c9547b313509237d6)
     * @param {String} accept application/json
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/DeleteJoinCompaniesLinksByIdSuccess} and HTTP response
     */
    this.deleteJoinCompaniesLinksByIdWithHttpInfo = function(companyId, joinCompanyLinkId, accept) {
      var postBody = null;
      // verify the required parameter 'companyId' is set
      if (companyId === undefined || companyId === null) {
        throw new Error("Missing the required parameter 'companyId' when calling deleteJoinCompaniesLinksById");
      }
      // verify the required parameter 'joinCompanyLinkId' is set
      if (joinCompanyLinkId === undefined || joinCompanyLinkId === null) {
        throw new Error("Missing the required parameter 'joinCompanyLinkId' when calling deleteJoinCompaniesLinksById");
      }
      // verify the required parameter 'accept' is set
      if (accept === undefined || accept === null) {
        throw new Error("Missing the required parameter 'accept' when calling deleteJoinCompaniesLinksById");
      }

      var pathParams = {
        'companyId': companyId,
        'joinCompanyLinkId': joinCompanyLinkId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'accept': accept
      };
      var formParams = {
      };

      var authNames = ['Bearer'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = DeleteJoinCompaniesLinksByIdSuccess;
      return this.apiClient.callApi(
        '/api/rainbow/admin/v1.0/companies/{companyId}/join-companies/links/{joinCompanyLinkId}', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Delete a join company link
     * This API can be used by company `admin` users to delete a join company link by id       Example: DELETE https://openrainbow.com/api/rainbow/admin/v1.0/companies/5703d0d49ccf39843c7ef897/join-companies/links/5819ed7c9547b313509237d6
     * @param {String} companyId Company unique identifier (like 569ce8c8f9336c471b98eda1)
     * @param {String} joinCompanyLinkId Join company link unique identifier (like 5819ed7c9547b313509237d6)
     * @param {String} accept application/json
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/DeleteJoinCompaniesLinksByIdSuccess}
     */
    this.deleteJoinCompaniesLinksById = function(companyId, joinCompanyLinkId, accept) {
      return this.deleteJoinCompaniesLinksByIdWithHttpInfo(companyId, joinCompanyLinkId, accept)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Get all join company links
     * This API can be used by company `admin` users to list existing join company links for his company.       Join company links allow users to send a join company request to company admins (using API [POST /api/rainbow/enduser/v1.0/users/{userId}/request-join-company][0]).       Example: GET https://openrainbow.com/api/rainbow/admin/v1.0/companies/5703d0d49ccf39843c7ef897/join-companies/links  [0]: /enduser/#api-join_company-enduser_RequestJoinCompany
     * @param {String} companyId Company unique identifier (like 569ce8c8f9336c471b98eda1)
     * @param {String} accept application/json
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/GetJoinCompaniesLinksSuccess} and HTTP response
     */
    this.getJoinCompaniesLinksWithHttpInfo = function(companyId, accept) {
      var postBody = null;
      // verify the required parameter 'companyId' is set
      if (companyId === undefined || companyId === null) {
        throw new Error("Missing the required parameter 'companyId' when calling getJoinCompaniesLinks");
      }
      // verify the required parameter 'accept' is set
      if (accept === undefined || accept === null) {
        throw new Error("Missing the required parameter 'accept' when calling getJoinCompaniesLinks");
      }

      var pathParams = {
        'companyId': companyId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'accept': accept
      };
      var formParams = {
      };

      var authNames = ['Bearer'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = GetJoinCompaniesLinksSuccess;
      return this.apiClient.callApi(
        '/api/rainbow/admin/v1.0/companies/{companyId}/join-companies/links', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Get all join company links
     * This API can be used by company `admin` users to list existing join company links for his company.       Join company links allow users to send a join company request to company admins (using API [POST /api/rainbow/enduser/v1.0/users/{userId}/request-join-company][0]).       Example: GET https://openrainbow.com/api/rainbow/admin/v1.0/companies/5703d0d49ccf39843c7ef897/join-companies/links  [0]: /enduser/#api-join_company-enduser_RequestJoinCompany
     * @param {String} companyId Company unique identifier (like 569ce8c8f9336c471b98eda1)
     * @param {String} accept application/json
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/GetJoinCompaniesLinksSuccess}
     */
    this.getJoinCompaniesLinks = function(companyId, accept) {
      return this.getJoinCompaniesLinksWithHttpInfo(companyId, accept)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Get a join company link
     * This API can be used by company `admin` users to get a join company link by id       Join company links allow users to send a join company request to company admins (using API [POST /api/rainbow/enduser/v1.0/users/:userId/request-join-company][0]).       Example: GET https://openrainbow.com/api/rainbow/admin/v1.0/companies/5703d0d49ccf39843c7ef897/join-companies/links/5819ed7c9547b313509237d6  [0]: /enduser/#api-join_company-enduser_RequestJoinCompany
     * @param {String} companyId Company unique identifier (like 569ce8c8f9336c471b98eda1)
     * @param {String} joinCompanyLinkId Join company link unique identifier (like 5819ed7c9547b313509237d6)
     * @param {String} accept application/json
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/GetJoinCompaniesLinksByIdSuccess} and HTTP response
     */
    this.getJoinCompaniesLinksByIdWithHttpInfo = function(companyId, joinCompanyLinkId, accept) {
      var postBody = null;
      // verify the required parameter 'companyId' is set
      if (companyId === undefined || companyId === null) {
        throw new Error("Missing the required parameter 'companyId' when calling getJoinCompaniesLinksById");
      }
      // verify the required parameter 'joinCompanyLinkId' is set
      if (joinCompanyLinkId === undefined || joinCompanyLinkId === null) {
        throw new Error("Missing the required parameter 'joinCompanyLinkId' when calling getJoinCompaniesLinksById");
      }
      // verify the required parameter 'accept' is set
      if (accept === undefined || accept === null) {
        throw new Error("Missing the required parameter 'accept' when calling getJoinCompaniesLinksById");
      }

      var pathParams = {
        'companyId': companyId,
        'joinCompanyLinkId': joinCompanyLinkId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'accept': accept
      };
      var formParams = {
      };

      var authNames = ['Bearer'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = GetJoinCompaniesLinksByIdSuccess;
      return this.apiClient.callApi(
        '/api/rainbow/admin/v1.0/companies/{companyId}/join-companies/links/{joinCompanyLinkId}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Get a join company link
     * This API can be used by company `admin` users to get a join company link by id       Join company links allow users to send a join company request to company admins (using API [POST /api/rainbow/enduser/v1.0/users/:userId/request-join-company][0]).       Example: GET https://openrainbow.com/api/rainbow/admin/v1.0/companies/5703d0d49ccf39843c7ef897/join-companies/links/5819ed7c9547b313509237d6  [0]: /enduser/#api-join_company-enduser_RequestJoinCompany
     * @param {String} companyId Company unique identifier (like 569ce8c8f9336c471b98eda1)
     * @param {String} joinCompanyLinkId Join company link unique identifier (like 5819ed7c9547b313509237d6)
     * @param {String} accept application/json
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/GetJoinCompaniesLinksByIdSuccess}
     */
    this.getJoinCompaniesLinksById = function(companyId, joinCompanyLinkId, accept) {
      return this.getJoinCompaniesLinksByIdWithHttpInfo(companyId, joinCompanyLinkId, accept)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Create a join company link
     * This API can be used by company `admin` users to create a join company link for his company.       Join company links allow users to send a join company request to company admins (using API [POST /api/rainbow/enduser/v1.0/users/:userId/request-join-company][0]).       Example: POST https://openrainbow.com/api/rainbow/admin/v1.0/companies/5703d0d49ccf39843c7ef897/join-companies/links  [0]: /enduser/#api-join_company-enduser_RequestJoinCompany
     * @param {String} companyId Company unique identifier (like 569ce8c8f9336c471b98eda1)
     * @param {module:model/PostJoinCompaniesLinks} body 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/PostJoinCompaniesLinksSuccess} and HTTP response
     */
    this.postJoinCompaniesLinksWithHttpInfo = function(companyId, body) {
      var postBody = body;
      // verify the required parameter 'companyId' is set
      if (companyId === undefined || companyId === null) {
        throw new Error("Missing the required parameter 'companyId' when calling postJoinCompaniesLinks");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling postJoinCompaniesLinks");
      }

      var pathParams = {
        'companyId': companyId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['Bearer'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = PostJoinCompaniesLinksSuccess;
      return this.apiClient.callApi(
        '/api/rainbow/admin/v1.0/companies/{companyId}/join-companies/links', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Create a join company link
     * This API can be used by company `admin` users to create a join company link for his company.       Join company links allow users to send a join company request to company admins (using API [POST /api/rainbow/enduser/v1.0/users/:userId/request-join-company][0]).       Example: POST https://openrainbow.com/api/rainbow/admin/v1.0/companies/5703d0d49ccf39843c7ef897/join-companies/links  [0]: /enduser/#api-join_company-enduser_RequestJoinCompany
     * @param {String} companyId Company unique identifier (like 569ce8c8f9336c471b98eda1)
     * @param {module:model/PostJoinCompaniesLinks} body 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/PostJoinCompaniesLinksSuccess}
     */
    this.postJoinCompaniesLinks = function(companyId, body) {
      return this.postJoinCompaniesLinksWithHttpInfo(companyId, body)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }
  };

  return exports;
}));
