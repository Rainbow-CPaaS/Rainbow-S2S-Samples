/*
 * Rainbow authentication portal
 * # Rainbow authentication portal API guide  ## Preamble  [Download Postman collection][0]  ### Introduction  This guide describes list of API services that are provided by OT Rainbow authentication portal system. Services are used to manage OT Rainbow authentication.  ### Protocol  REST interface is used for sending/receiving OT rainbow API messages.   HTTP request GET is used. Standard HTTP responses are used to provide requested information or error status. There is no session notion in OT Rainbow system, so requests could be issued according stateless model, without transport conservation between them.   JSON is used as a main format for data encoding in message body part. Each request is started with the following pattern /{module}/{version}/ where {module} is a portal module name to address and {version} is a version of used API, par example, “v1.0”.  ### Security considerations  Each request should contain some credential information to authenticate itself. Standard HTTP authentication with basic/bearer modes is used. JSON Web Token mechanism is used to provide authentication information. JWT has a expire timeout that is controlled by OT Rainbow portal to prevent very long token usage. Also authentication with application token is used. The token must be provided in the request HTTP header, using a custom header: APIKey. At server side, token is verified, and if it doesn’t match, 403 Not Allowed response is sent. TLS is used as a transport protocol to support message exchanges between OT Rainbow portal and an application.    [0]: AuthenticationPortalServer_postman.json
 *
 * The version of the OpenAPI document: 1.104.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ale.rainbow.s2s.client.auth.models;

import com.ale.rainbow.s2s.client.auth.models.GetBasicLoginSuccessLoggedInUserCreatedByAdmin;
import com.ale.rainbow.s2s.client.auth.models.PostSamlAssertionSuccessEmails;
import com.ale.rainbow.s2s.client.auth.models.PostSamlAssertionSuccessPhoneNumbers;
import com.ale.rainbow.s2s.client.auth.models.PostSamlAssertionSuccessProfiles;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for PostSamlAssertionSuccessLoggedInUser
 */
public class PostSamlAssertionSuccessLoggedInUserTest {
    private final PostSamlAssertionSuccessLoggedInUser model = new PostSamlAssertionSuccessLoggedInUser();

    /**
     * Model tests for PostSamlAssertionSuccessLoggedInUser
     */
    @Test
    public void testPostSamlAssertionSuccessLoggedInUser() {
        // TODO: test PostSamlAssertionSuccessLoggedInUser
    }

    /**
     * Test the property 'activationDate'
     */
    @Test
    public void activationDateTest() {
        // TODO: test activationDate
    }

    /**
     * Test the property 'adminType'
     */
    @Test
    public void adminTypeTest() {
        // TODO: test adminType
    }

    /**
     * Test the property 'companyId'
     */
    @Test
    public void companyIdTest() {
        // TODO: test companyId
    }

    /**
     * Test the property 'companyName'
     */
    @Test
    public void companyNameTest() {
        // TODO: test companyName
    }

    /**
     * Test the property 'country'
     */
    @Test
    public void countryTest() {
        // TODO: test country
    }

    /**
     * Test the property 'createdByAdmin'
     */
    @Test
    public void createdByAdminTest() {
        // TODO: test createdByAdmin
    }

    /**
     * Test the property 'createdBySelfRegister'
     */
    @Test
    public void createdBySelfRegisterTest() {
        // TODO: test createdBySelfRegister
    }

    /**
     * Test the property 'creationDate'
     */
    @Test
    public void creationDateTest() {
        // TODO: test creationDate
    }

    /**
     * Test the property 'displayName'
     */
    @Test
    public void displayNameTest() {
        // TODO: test displayName
    }

    /**
     * Test the property 'emails'
     */
    @Test
    public void emailsTest() {
        // TODO: test emails
    }

    /**
     * Test the property 'firstLoginDate'
     */
    @Test
    public void firstLoginDateTest() {
        // TODO: test firstLoginDate
    }

    /**
     * Test the property 'firstName'
     */
    @Test
    public void firstNameTest() {
        // TODO: test firstName
    }

    /**
     * Test the property 'guestMode'
     */
    @Test
    public void guestModeTest() {
        // TODO: test guestMode
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'initializationDate'
     */
    @Test
    public void initializationDateTest() {
        // TODO: test initializationDate
    }

    /**
     * Test the property 'invitedBy'
     */
    @Test
    public void invitedByTest() {
        // TODO: test invitedBy
    }

    /**
     * Test the property 'isADSearchAvailable'
     */
    @Test
    public void isADSearchAvailableTest() {
        // TODO: test isADSearchAvailable
    }

    /**
     * Test the property 'isActive'
     */
    @Test
    public void isActiveTest() {
        // TODO: test isActive
    }

    /**
     * Test the property 'isInDefaultCompany'
     */
    @Test
    public void isInDefaultCompanyTest() {
        // TODO: test isInDefaultCompany
    }

    /**
     * Test the property 'isInitialized'
     */
    @Test
    public void isInitializedTest() {
        // TODO: test isInitialized
    }

    /**
     * Test the property 'isTerminated'
     */
    @Test
    public void isTerminatedTest() {
        // TODO: test isTerminated
    }

    /**
     * Test the property 'jidIm'
     */
    @Test
    public void jidImTest() {
        // TODO: test jidIm
    }

    /**
     * Test the property 'jidPassword'
     */
    @Test
    public void jidPasswordTest() {
        // TODO: test jidPassword
    }

    /**
     * Test the property 'jidTel'
     */
    @Test
    public void jidTelTest() {
        // TODO: test jidTel
    }

    /**
     * Test the property 'jobTitle'
     */
    @Test
    public void jobTitleTest() {
        // TODO: test jobTitle
    }

    /**
     * Test the property 'language'
     */
    @Test
    public void languageTest() {
        // TODO: test language
    }

    /**
     * Test the property 'lastAvatarUpdateDate'
     */
    @Test
    public void lastAvatarUpdateDateTest() {
        // TODO: test lastAvatarUpdateDate
    }

    /**
     * Test the property 'lastLoginDate'
     */
    @Test
    public void lastLoginDateTest() {
        // TODO: test lastLoginDate
    }

    /**
     * Test the property 'lastName'
     */
    @Test
    public void lastNameTest() {
        // TODO: test lastName
    }

    /**
     * Test the property 'lastUpdateDate'
     */
    @Test
    public void lastUpdateDateTest() {
        // TODO: test lastUpdateDate
    }

    /**
     * Test the property 'loggedSince'
     */
    @Test
    public void loggedSinceTest() {
        // TODO: test loggedSince
    }

    /**
     * Test the property 'loginEmail'
     */
    @Test
    public void loginEmailTest() {
        // TODO: test loginEmail
    }

    /**
     * Test the property 'nickName'
     */
    @Test
    public void nickNameTest() {
        // TODO: test nickName
    }

    /**
     * Test the property 'organisationId'
     */
    @Test
    public void organisationIdTest() {
        // TODO: test organisationId
    }

    /**
     * Test the property 'phoneNumbers'
     */
    @Test
    public void phoneNumbersTest() {
        // TODO: test phoneNumbers
    }

    /**
     * Test the property 'profiles'
     */
    @Test
    public void profilesTest() {
        // TODO: test profiles
    }

    /**
     * Test the property 'roles'
     */
    @Test
    public void rolesTest() {
        // TODO: test roles
    }

    /**
     * Test the property 'siteId'
     */
    @Test
    public void siteIdTest() {
        // TODO: test siteId
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'timeToLive'
     */
    @Test
    public void timeToLiveTest() {
        // TODO: test timeToLive
    }

    /**
     * Test the property 'timezone'
     */
    @Test
    public void timezoneTest() {
        // TODO: test timezone
    }

    /**
     * Test the property 'title'
     */
    @Test
    public void titleTest() {
        // TODO: test title
    }

    /**
     * Test the property 'userInfo1'
     */
    @Test
    public void userInfo1Test() {
        // TODO: test userInfo1
    }

    /**
     * Test the property 'userInfo2'
     */
    @Test
    public void userInfo2Test() {
        // TODO: test userInfo2
    }

    /**
     * Test the property 'visibility'
     */
    @Test
    public void visibilityTest() {
        // TODO: test visibility
    }

}
